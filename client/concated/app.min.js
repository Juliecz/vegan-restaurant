function loginPost(){$(document).ready(function(){var a,b;$("#submit").click(function(){a=$("#username").val(),b=$("#password").val(),$.post("http://localhost:3000/admin",{user:a,password:b},function(a){})})})}function initialize(){var a=(new google.maps.DirectionsService,new google.maps.DirectionsRenderer),b=new google.maps.LatLng(50.03855328103505,14.512730911374092),c={zoom:12,mapTypeId:google.maps.MapTypeId.ROADMAP,center:b},d=new google.maps.Map(document.getElementById("map"),c),e=new google.maps.Marker({position:b,map:d,title:"Veganska restaurace",animation:google.maps.Animation.DROP});a.setMap(d,e)}function initH1(){document.getElementById("h1Kontrola").innerHTML="caaaaau"}function findAllFunc(a){Menu.find(function(b,c){b&&a.send(b),console.log(c),a.json(c)})}angular.module("veganapp.admin").controller("dailyMenuCtrl",["$scope","$state","$stateParams","dailyMenuAdmin",function(a,b,c,d){a.day=["Pondělí","Úterý","Středa","Čtvrtek","Pátek"],a.dayObj=[],a.actions={"new":"Pridat nove jidlo",edit:"Upravit jidlo"},d.getDay().success(function(b,c){a.datum=b,console.log("Status getday: ",c)}),d.getDailyMenu().success(function(b,c){if(a.data=b,console.log(b),console.log(c),a.data&&a.datum){for(var d=0;d<a.day.length;d++)a.dayObj.push({name:a.datum[d],text:a.day[d]});console.log("Day arr object",a.dayObj)}}),d.getSort().success(function(b,c){a.typ=b,console.log("Typ: ",a.typ)}),a.setAction=function(d,e){c.action=d,c.id=e;var f={};if("new"==c.action)f={action:c.action,actionName:a.actions["new"],id:c.id,object:{},menuType:"daily"},c.actionName=a.actions["new"],b.go("admin.edit",f);else if("edit"==c.action){for(var g=0;g<a.data.length;g++)if(a.data[g]._id==c.id){a.editFoodObj=a.dataMenu[g];break}f={action:c.action,actionName:a.actions.edit,id:c.id,object:a.editFoodObj,menuType:"daily"},console.log(f)}else"delete"==c.action;console.log(f)}}]),angular.module("veganapp.admin").controller("editCtrl",["$scope","$state","$stateParams","getMenu","dailyMenuAdmin",function(a,b,c,d,e){a.typMenu=["Staly jídelní lístek","Polední menu"],a.stateTypMenu=c.menuType,window.innerWidth<800&&window.innerWidth>600?(a.formWidth="width: 85%",a.divForm="width: 95%"):window.innerWidth>800?(a.formWidth="width: 60%",a.divForm="width: 80%"):(a.formWidth="width: 100%",a.divForm="width: 100%"),e.getDay().success(function(b,c){a.den=b}),d.getFood().success(function(b,c){a.dataMenu=b,console.log(c),console.log(a.dataMenu)}),d.getSort().success(function(b,c){a.trida=b}),d.getTyp().success(function(b,c){a.typ=b}),a.action=c.actionName,null===c.action?b.go("admin.menu"):"edit"==c.action&&(console.log("action is edit"),console.log(c.menuType),console.log("Prvni: ",a.typMenu[0]),a.formData={jmeno:c.object.foodName,popis:c.object.foodDescription,typ:c.object.foodType,trida:c.object.foodSort,cena:c.object.price},"menu"==c.menuType?a.formData.typMenu=a.typMenu[0]:a.formData.typMenu=a.typMenu[1]),a.sendPost=function(){var d={};"new"==c.action?(d={jmeno:a.formData.jmeno,popis:a.formData.popis,typ:a.formData.typ,trida:a.formData.trida,cena:a.formData.cena},a.createFood(d),b.go("admin.menu")):"edit"==c.action&&(d={jmeno:a.formData.jmeno,popis:a.formData.popis,typ:a.formData.typ,trida:a.formData.trida,cena:a.formData.cena},a.editFood(d),b.go("admin.menu"))},a.createFood=function(a){a&&d.createFood(a).success(function(a,b){console.log(a),console.log(b)})},a.editFood=function(a){a&&d.updateFood(c.id,a).success(function(a,b){console.log(a),console.log(b)})}}]),angular.module("veganapp.admin").controller("headCtrl",function(a){}),angular.module("veganapp.admin").controller("homeCtrlA",["$scope","$http","$stateParams","authProvider",function(a,b,c,d){}]),angular.module("veganapp.admin").controller("loginCtrl",["$scope","$state","$http","$rootScope","$location","authProvider",function(a,b,c,d,e,f){a.user={},a.login=function(){f.login(a.user.username,a.user.password).then(function(a){b.go("admin")})["catch"](function(){a.outputData="Zadejte spravne udaje"})}}]),angular.module("veganapp.admin").controller("menuCtrl",["$scope","$state","$stateParams","getMenu",function(a,b,c,d){a.actions={"new":"Pridat nove jidlo",edit:"Upravit jidlo"},a.dataMenu={},a.typ={},a.trida={},d.getFood().success(function(b,c){a.dataMenu=b,console.log(c),console.log(a.dataMenu)}),d.getTyp().success(function(b,c){a.typ=b,console.log(a.typ)}),d.getSort().success(function(b,c){a.trida=b,console.log(a.trida)}),a.setAction=function(e,f){c.action=e,c.id=f;var g={};if("new"==c.action)g={action:c.action,actionName:a.actions["new"],id:c.id,object:{},menuType:"menu"},c.actionName=a.actions["new"],b.go("admin.edit",g);else if("edit"==c.action){for(var h=0;h<a.dataMenu.length;h++)if(a.dataMenu[h]._id==c.id){a.editFoodObj=a.dataMenu[h];break}g={action:c.action,actionName:a.actions.edit,id:c.id,object:a.editFoodObj,menuType:"menu"},b.go("admin.edit/:id",g)}else"delete"==c.action&&(g={action:c.action,actionName:"delete",id:c.id},d.removeFood(g.id),d.getFood().success(function(b,c){a.dataMenu=b,console.log(c),console.log(a.dataMenu)}));console.log(g)}}]),angular.module("veganapp.admin").controller("reservationCtrl",["$scope",function(a){}]),angular.module("veganapp.admin").controller("userCtrl",["$scope","$state","authProvider",function(a,b,c){c.isLoggedIn().then(function(b){a.id=b})}]),angular.module("veganapp.admin").controller("usersCtrl",["$scope","$state","$stateParams","getMenu","dailyMenuAdmin",function(a,b,c,d,e){}]),angular.module("veganapp.admin").config(["$stateProvider","$urlRouterProvider",function(a,b){a.state("admin",{url:"/admin",views:{main:{templateUrl:"/views/admin/content.html",controller:"headCtrlA"}},resolve:{loggedInResolve:function(a,b){a.isLoggedIn().then(function(a){""!==a.data&&"0"!==a.data?b.go("admin.home"):b.go("login")},function(){b.go("login")})}},abstact:!0}).state("admin.home",{url:"/home",views:{admin:{templateUrl:"/views/admin/home.html",controller:"homeCtrlA"}}}).state("admin.user",{url:"/user",views:{admin:{templateUrl:"/views/admin/user.html",controller:"userCtrl"}}}).state("admin.users",{url:"/users",views:{admin:{templateUrl:"/views/admin/users.html",controller:"usersCtrl"}}}).state("admin.menu",{url:"/menu",views:{admin:{templateUrl:"/views/admin/menu.html",controller:"menuCtrl"}}}).state("admin.dailyMenu",{url:"/dailyMenu",views:{admin:{templateUrl:"/views/admin/dailyMenu.html",controller:"dailyMenuCtrl"}}}).state("admin.reservation",{url:"/reservation",views:{admin:{templateUrl:"/views/admin/reservation.html",controller:"reservationCtrl"}}}).state("admin.edit",{url:"/edit",views:{admin:{templateUrl:"/views/admin/edit.html",controller:"editCtrl"}},params:{action:null,actionName:null,id:null,object:{},menuType:null}}).state("admin.edit/:id",{url:"/edit/:id",views:{admin:{templateUrl:"/views/admin/edit.html",controller:"editCtrl"}},params:{action:null,actionName:null,id:null,object:{},menuType:null}}).state("login",{url:"/login",views:{main:{templateUrl:"/views/admin/login.html",controller:"loginCtrl"}},resolve:{loggedInResolve:function(a,b){a.isLoggedIn().then(function(a){console.log("resolve is running: ",a.data),""!==a.data&&"0"!==a.data?b.go("admin.home"):b.go("login")},function(){b.go("login")})}}})}]).run(["$state","$rootScope","$location","authProvider",function(a,b,c,d){}]).controller("headCtrlA",["$scope","$state","$stateParams","$location","authProvider",function(a,b,c,d,e){a.logout=function(){e.logout().then(function(){d.url("/home")})}}]),angular.module("veganapp.admin").factory("dailyMenuAdmin",function(a){return{getDailyMenu:function(){return a.get("/api/dailymenu").success(function(a){this.jsonData=a})},getDay:function(){return a.get("/api/dailymenu/day").success(function(a){this.jsonData=a})},getType:function(){return a.get("/api/dailymenu/type").success(function(a){this.jsonData=a})},getSort:function(){return a.get("/api/dailymenu/sort").success(function(a){this.jsonData=a})}}}),angular.module("veganapp.admin").factory("getMenu",function(a){return{getFood:function(){return a.get("/api/menu").success(function(a){this.jsonData=a})},getSort:function(){return a.get("/api/menu/sort").success(function(a){this.jsonData=a})},getTyp:function(){return a.get("/api/menu/type").success(function(a){this.jsonData=a})},createFood:function(b){return a.post("/api/menu",{foodName:b.jmeno,foodDescription:b.popis,foodType:b.typ,foodSort:b.trida,price:b.cena})},removeFood:function(b){return a["delete"]("/api/menu/"+b,{id:b})},updateFood:function(b,c){return a.put("/api/menu/"+b,{id:b,foodName:c.jmeno,foodDescription:c.popis,foodType:c.typ,foodSort:c.trida,price:c.cena})}}}),angular.module("veganapp.public",["veganapp.system"]),angular.module("veganapp.admin",["veganapp.system"]);var myApp=angular.module("veganapp",["veganapp.public","veganapp.admin","veganapp.system"]);myApp.config(["$stateProvider","$urlRouterProvider",function(a,b){a.state("root",{views:{main:{controller:["$state","$injector",function(a,b){}]}}}),b.otherwise("/home")}]).controller("contentCtrl",function(a,b,c){console.log(b.absUrl()),console.log(c.current),a.setContent=function(){},$(window).resize(function(){})}).run(["$location","$state",function(a,b){}]),angular.module("veganapp.admin").factory("authProvider",["$q","$timeout","$http","$location",function(a,b,c,d){return{login:function(a,b){return c.post("/api/login",{username:a,password:b}).success(function(a,b){return a}).error(function(){return 0})},isLoggedIn:function(){return c.get("/api/logged").success(function(a,b){return a}).error(function(){return 0})},logout:function(){return c.get("/api/logout").success(function(a,b){return a}).error(function(){return 0})}}}]),angular.module("veganapp.public").controller("orderCtrl",function(a){}),angular.module("veganapp.public").controller("contactCtrl",function(a){initH1()}),angular.module("veganapp.public").controller("homeCtrl",function(a){a.test="testovani"}),angular.module("veganapp.public").controller("menuCtrlP",["$scope","$http","menuPublic",function(a,b,c){switch(a.today=(new Date).getDay(),console.log("Today is: ",a.today),0===a.today||6===a.today?a.vikend=!0:a.vikend=!1,a.tridaVar=[],a.poledni=[],a.todayStr="Pro dnešní den není žádné polední menu.",a.today){case 1:a.todayStr="pondeli";break;case 2:a.todayStr="utery";break;case 3:a.todayStr="streda";break;case 4:a.todayStr="ctvrtek";break;case 5:a.todayStr="patek"}a.tridaDaily=[{name:"polevka",text:"Polévka"},{name:"hlavni",text:"Hlavní chody"}],c.getMenu().success(function(b,c){a.data=b,console.log("data: ",c),console.log(a.data)}),c.getDailyMenu().success(function(b,c){for(var d=0;d<b.length;d++)b[d].day===a.todayStr&&(console.log("Cislo: ",d," object: ",b[d]),a.poledni.push(b[d]))}),c.getSort().success(function(b,c){if(a.trida=b,console.log(c),console.log(a.trida),a.amount=a.trida.length,a.trida)for(var d=0;d<a.trida.length;d++)console.log(d),"predkrm"==a.trida[d]?a.tridaVar.push({name:"predkrm",text:"Předkrmy"}):"hlavni"==a.trida[d]?a.tridaVar.push({name:"hlavni",text:"Hlavní chody"}):"salat"==a.trida[d]?a.tridaVar.push({name:"salat",text:"Saláty"}):"dezert"==a.trida[d]&&a.tridaVar.push({name:"dezert",text:"Dezerty"})}),a.tabs=[{title:"Polední menu",template:"poledni"},{title:"Jídelní lístek",template:"jidelni"},{title:"Nápojový lístek",template:"napojovy"}],a.currentTab="jidelni",a.onclickTab=function(b){a.currentTab=b.template},a.activeTab=function(b){return b==a.currentTab}}]),angular.module("veganapp.public").controller("tablesCtrl",["$scope","getTable",function(a,b){function c(a){var b=a.date,c=a.mode;return"day"===c&&(0===b.getDay()||6===b.getDay())}function d(b){var c=b.date,d=b.mode;if("day"===d)for(var e=new Date(c).setHours(0,0,0,0),f=0;f<a.events.length;f++){var g=new Date(a.events[f].date).setHours(0,0,0,0);if(e===g)return a.events[f].status}return""}window.innerWidth<=380&&$("#restaurantMapId").css("width","window.innerWidth-20"),a.today=function(){a.data=new Date},a.today(),a.clear=function(){a.data=null},a.inlineOptions={customClass:d,minDate:new Date,showWeeks:!0},a.dateOptions={dateDisabled:c,formatYear:"yy",maxDate:new Date(2020,5,22),minDate:new Date,startingDay:1},a.setDate=function(b,c,d){a.data=new Date(b,c,d)},a.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],a.format=a.formats[0];var e=new Date;e.setDate(e.getDate()+1);var f=new Date(e);f.setDate(e.getDate()+1),a.events=[{date:e,status:"full"},{date:f,status:"partially"}],b.getTables().success(function(b,c){a.dataTable=b,console.log(c),console.log(a.dataTable)}),a.myNumber=5,a.getNumber=function(a){return new Array(a)}}]),angular.module("veganapp.public").config(["$stateProvider","$urlRouterProvider",function(a,b){a.state("public",{url:"",views:{main:{templateUrl:"/views/public/content.html",controller:"headCtrlP"}},"abstract":!0}).state("public.home",{url:"/home",views:{"public":{templateUrl:"/views/public/home.html",controller:"homeCtrl"}}}).state("public.menu",{url:"/menu",views:{"public":{templateUrl:"/views/public/menu.html",controller:"menuCtrlP"}}}).state("public.contact",{url:"/contact",views:{"public":{templateUrl:"/views/public/contact.html",controller:"contactCtrl"}}}).state("public.reservation",{url:"/reservation",views:{"public":{templateUrl:"/views/public/tables.html",controller:"tablesCtrl"}}})}]).run(["$rootScope","$state",function(a,b){a.$state=b,b.go("public.home")}]),angular.module("veganapp.public").controller("headCtrlP",["$scope","$http","$rootScope",function(a,b,c){}]),angular.module("veganapp.public").factory("menuPublic",function(a){return{getMenu:function(){return a.get("/api/menu").success(function(a){this.jsonMenu=a})},getSort:function(){return a.get("/api/menu/sort").success(function(a){this.jsonData=a})},getDailyMenu:function(){return a.get("/api/dailymenu").success(function(a){this.jsonData=a})}}}),angular.module("veganapp.public").factory("getTable",function(a){return{getTables:function(){return a.get("/api/table").success(function(a){this.jsonTables=a})}}}),angular.module("veganapp.system",["ui.router","ui.router.stateHelper","ui.bootstrap","ngRoute"]);var mongoose=require("mongoose"),config=require("./config"),dbMongo=mongoose.createConnection(config.mongoose.uri);dbMongo.on("error",console.error),dbMongo.once("open",function(){console.log("Connected to database")}),module.exports=dbMongo;var nconf=require("nconf"),path=require("path");nconf.argv().env().file({file:path.join(__dirname,"config.json")}),module.exports=nconf;var mongoose=require("mongoose"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy,connection=require("../config/database"),userSchema=require("../models/user"),User=connection.model("User",userSchema);config=require("./config"),module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findById(a,function(a,c){b(a,c)})}),a.use(new LocalStrategy({username:"username",password:"password"},function(a,b,c){User.findOne({username:a},function(a,d){return a?(console.log("Chyba: local strategy"),c(a)):d?d.password!==b?c(null,!1,{message:"Incorrect password"}):c(null,d):c(null,!1,{message:"Incorrect username"})})}))};var index=require("../controllers/index"),admin=require("../controllers/admin"),menu=require("../controllers/menu"),users=require("../controllers/user"),tables=require("../controllers/table"),dailyMenu=require("../controllers/dailyMenu"),auth=require("../controllers/authenticate"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy;module.exports=function(a,b){a.get("/",index.render),a.get("/admin",admin.render),a.get("/api/menu",menu.findAll),a.post("/api/menu",menu.createFood),a.get("/api/menu/type",menu.enumType),a.get("/api/menu/sort",menu.enumSort),a.put("/api/menu/:id",menu.editFood),a["delete"]("/api/menu/:id",menu.deleteFood),a.get("/api/dailymenu",dailyMenu.findAll),a.get("/api/dailymenu/day",dailyMenu.enumDay),a.get("/api/dailymenu/type",dailyMenu.enumType),a.get("/api/dailymenu/sort",dailyMenu.enumSort),a.get("/api/user",auth.checkAuthenticate,users.findAll),a.get("/api/table",tables.findAll),a.post("/api/login",b.authenticate("local"),auth.login),a.get("/api/logged",auth.logged),a.get("/api/logout",auth.logout)};var User=require("../models/user");exports.render=function(a,b,c){b.render("admin",{title:"Vegan Restaurant"})};var local=require("passport-local").Strategy,passport=require("passport");exports.login=function(a,b){console.log(a.body),b.send(a.body)},exports.logout=function(a,b){a.logout(),b.redirect("/")},exports.checkAuthenticate=function(a,b,c){a.isAuthenticated()?c():b.render("404")},exports.logged=function(a,b){a.isAuthenticated()?console.log("Logged: ",a.session.passport.user):console.log("Not logged"),b.send(a.isAuthenticated()?a.session.passport.user:0)};var connection=require("../config/database"),dailyMenuSchema=require("../models/dailyMenu");DailyMenu=connection.model("DailyMenu",dailyMenuSchema),exports.findAll=function(a,b,c){DailyMenu.find(function(a,c){a&&b.send(a),console.log(c),b.json(c)})},exports.enumDay=function(a,b){var c=DailyMenu.schema.path("day").enumValues;b.send(JSON.stringify(c))},exports.enumSort=function(a,b){var c=DailyMenu.schema.path("foodSort").enumValues;b.send(JSON.stringify(c))},exports.enumType=function(a,b){var c=DailyMenu.schema.path("foodType").enumValues;b.send(JSON.stringify(c))};var connection=require("../config/database"),drinkMenuSchema=require("../models/drinkMenu");Drink=connection.model("Drink",drinkMenuSchema),exports.findAll=function(a,b,c){Drink.find(function(a,c){a&&b.send(a),console.log(c),b.json(c)})};var Menu=require("../models/menu");exports.render=function(a,b,c){b.render("index",{title:"Vegan Restaurant"})};var connection=require("../config/database"),menuSchema=require("../models/menu");Menu=connection.model("Menu",menuSchema),exports.findAll=function(a,b,c){findAllFunc(b)},exports.createFood=function(a,b,c){var d=Number(a.body.price),e=Menu({foodName:a.body.foodName,foodDescription:a.body.foodDescription,foodType:a.body.foodType,foodSort:a.body.foodSort,price:d});e.save(function(a,c){a?b.send(a):(console.log(c),findAllFunc(b))}),console.log("Req body: "+typeof a.body.foodDescription)},exports.enumType=function(a,b,c){var d=Menu.schema.path("foodType").enumValues;b.send(JSON.stringify(d))},exports.enumSort=function(a,b,c){var d=Menu.schema.path("foodSort").enumValues;b.send(JSON.stringify(d))},exports.deleteFood=function(a,b,c){Menu.findByIdAndRemove(a.params.id,function(c){c?(console.log(c),b.send(c)):(console.log("Data remove: ",a.params.id),findAllFunc(b))}),console.log("Data req body: ",a.params.id)},exports.editFood=function(a,b){Menu.findByIdAndUpdate(a.body.id,{$set:a.body},function(a,c){a?(console.log(a),b.send(a)):findAllFunc(b)}),console.log("Edit food params ",a.params,"Req body: ",a.body)};var connection=require("../config/database"),tableSchema=require("../models/table");Table=connection.model("Table",tableSchema),exports.findAll=function(a,b,c){Table.find(function(a,c){a&&b.send(a),console.log(c),b.json(c)})};var connection=require("../config/database"),userSchema=require("../models/user");User=connection.model("User",userSchema),exports.findAll=function(a,b,c){User.find(function(a,c){a&&b.send(a),console.log(c),b.json(c)})};var mongoose=require("mongoose"),connection=require("../config/database"),dailyMenuSchema=new mongoose.Schema({foodName:{type:String,unique:!1,required:!0},foodDescription:{type:String,required:!0},foodType:{type:String,required:!0,"enum":["vegan","raw"]},foodSort:{type:String,required:!0,"enum":["polevka","hlavni"]},day:{type:String,required:!0,"enum":["pondeli","utery","streda","ctvrtek","patek"]},price:{type:Number,required:!0}});module.exports=dailyMenuSchema;var mongoose=require("mongoose"),connection=require("../config/database"),drinkMenuSchema=new mongoose.Schema({foodName:{type:String,unique:!0,required:!0},foodDescription:{type:String,required:!0},foodType:{type:String,required:!0,"enum":["teple","studene"]},foodSort:{type:String,required:!0,"enum":["caj","kava","fresh"]},price:{type:Number,required:!0}});module.exports=drinkMenuSchema;var mongoose=require("mongoose"),connection=require("../config/database"),menuSchema=new mongoose.Schema({foodName:{type:String,unique:!0,required:!0},foodDescription:{type:String,required:!1},foodType:{type:String,required:!0,"enum":["vegan","raw"]},foodSort:{type:String,required:!0,"enum":["predkrm","hlavni","salat","dezert"]},price:{type:Number,required:!0}});module.exports=menuSchema;var mongoose=require("mongoose"),connection=require("../config/database"),reservationSchema=new mongoose.Schema({startDate:{type:Date,required:!0},endDate:{type:Date,required:!0},table:{type:ObjectId,required:!0},nameReserve:{type:String,required:!0},emailReserve:{type:String,required:!0},phoneReserve:{type:Number,required:!0}});module.exports=reservationSchema;var mongoose=require("mongoose"),connection=require("../config/database"),tableSchema=new mongoose.Schema({name:{type:Number,required:!0,unique:!0},seatingNum:{type:String,required:!0,"enum":["two","four"]},smoking:{type:Boolean,requred:!0}});module.exports=tableSchema;var mongoose=require("mongoose"),connection=require("../config/database"),userSchema=new mongoose.Schema({username:{type:String,unique:!0,required:!0},name:{type:String,required:!0},surname:{type:String,required:!0},role:{type:String,required:!0,"enum":["admin","employee"]},password:{type:String,required:!0},email:{type:String,required:!0},phone:{type:Number,required:!0},created:{type:Date,"default":Date.now}});module.exports=userSchema;